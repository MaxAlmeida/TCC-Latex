Add_double
  -- Dentro do diretório suite9, executa -se o comando ./singleuser , em seguida escolhe-se o tempo de execução do teste. Uma possibilidade
  é que pode se definrir também métricas para memória.
  Teste: Executar um teste de add double com duração de 15s , durante 15 min
  ./singleuser <<<$'foreground\n\n3\n/mnt\n'
 
Bw_mem
executar bw_mem 800M cp trinta vezes
Instalando bw_mem http://apt.sw.be/redhat/el7/en/x86_64/rpmforge/RPMS/
bw_mem 800M rdwr

Bzip2
dd if=/dev/zero of=file.txt count=1024 bs=4048576 >> comando para gerar arquivo de 4GB
bzip2 -c --best file.txt > file.txt.bz

cat
trinta vezes
time sh -c "cat random > filecat.txt >> random" um arquivo de texto de 1gb ou mais

cachebench
Trinta vezes no mínimo
./cachebench -rwbsp -x0 -m24 -d1 -e1
http://icl.cs.utk.edu/llcbench/cachebench.html

Ccrypt
dd if=/dev/zero of=random bs=20048576 count=100 >> criação de arquivo de 2GB


cp
estrutura de arvore
nome do diretório gerar hash md5 de horas ao atual um arquivo para cada folha>> 1024 folhas
http://www.tutorialspoint.com/python/os_mkdir.htm

copiar um arquivo para outro arquivo "cp file1 file2" trinta vezes. O tamanho desse arquivo deve ser tal que seja no mínimo o dobro do tamanho da memória

dd
https://www.jamescoyle.net/how-to/599-benchmark-disk-io-with-dd-and-bonnie
Usar o seguinte comando para gerar um arquivo com 4gb ou pelo menos o dobro da memória da máquina virtual>>
sudo time sh -"dd c if=/dev/zero of=/home/out bs=8k count=500k; rm -f /home/out && sync"
ão


Grep
dd if=/dev/urandom of=random bs=10048576 count=100 >> comando para gerar arquivo de 1000mb para grep
grep -aoE '[123]+' random | tr -d '\n'

Gzip
trinta vezes
dd if=/dev/zero of=file.txt count=1024 bs=4048576 >> comando para gerar arquivo de 4GB
gzip -c --best file.txt > file.txt.bz

Iozone
http://www.thegeekstuff.com/2011/05/iozone-examples/
operações típicas de banco de dados
executar iozone na opção -a trinta vezes. Executa os seis primeiros testes com o tamanho fixo do arquivo de 2 GB e tamanho de bloco fixo em 16
./iozone -a -i 0 -i 1 -i 2 -s 2000000 -r 4086

Make
trinta vezes
executar o make no source code do apache e em seguida fazer o make clean para desfazer o make e faze-lo novamente em seguida

Povray
povray benchmark.pov trinta vezes


Para primeiro teste
Bzip
grep+povray
bzip2+grep 
cp+bzip2
crypt+crypt
grep+grep




cache

http://accu.org/index.php/journals/1886
https://courses.cs.washington.edu/courses/cse326/05wi/valgrind-doc/cg_main.html

segunda vez

cpu_time
http://www.thegeekstuff.com/2013/10/time-command-format/