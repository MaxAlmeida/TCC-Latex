

brute_score = csv2div('score.csv')
file = csv2div('all_results.csv')
pca = cspcana('file')

A = pca.scores.d
norm = A

for i = 1:49
  for j = 1:49
    c(i,j) = sqrt( ( A(i,1) - A(j,1) )^2 + ( A(i,2) - A(j,2) )^2 + ( A(i,3) - A(j,3) )^2 )
   end;
end

[sort,k] = gsort(A,'c','i')

nearest = sort(:,2:6)
position_nerest = k(:,2:6)

#calcula similaridade
for i = 1:49
  for j = 1:5 
     if (nearest(i,j) ~= 0) then
       si(i,j) = 1/nearest(i,j)
  end
end

# Calcula peso
Soma similaridade
sum_si = sum(si,'c1')

Cálcula o peso wi 

for i = 1:49
  for j = 1:5
     wi(i,j) = si(i,j)/sum_si(i)
  end
end

#calcula predição

For k = 1:1
 for i = 1:49
  sum = 0
   for j = 1:5
      sum = sum + wi(i,j)*norm(position_nerest(i,j),k)
   end
    predict(i,k) = sum
  end
end 

##Brute score
for i = 1:49
  sum = 0
   for j = 1:5
      sum = sum + wi(i,j)*norm(position_nerest(i,j),1)
   end
    predict(i,k) = sum
  end

k = número de métricas
i = número de foregrounds
j n mais próximosss
11,846153

7,8461545